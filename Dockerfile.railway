# Use the official .NET 8.0 SDK image
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build

# Install Node.js 18
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs

WORKDIR /src

# Copy project files
COPY ["Questionnaire.Server/Questionnaire.Server.csproj", "Questionnaire.Server/"]
COPY ["questionnaire.client/questionnaire.client.esproj", "questionnaire.client/"]
COPY ["questionnaire.client/package*.json", "questionnaire.client/"]

# Restore .NET dependencies (only server project to avoid frontend dependency issues)
RUN dotnet restore "Questionnaire.Server/Questionnaire.Server.csproj" --ignore-failed-sources

# Install Node.js dependencies
WORKDIR /src/questionnaire.client
RUN npm install

# Copy all source code
WORKDIR /src
COPY . .

# Build React app
WORKDIR /src/questionnaire.client
RUN npm run build

# Copy React build output to .NET wwwroot
RUN mkdir -p /src/Questionnaire.Server/wwwroot
RUN cp -r /src/questionnaire.client/dist/* /src/Questionnaire.Server/wwwroot/

# Build .NET app (only the server project)
WORKDIR /src/Questionnaire.Server
RUN dotnet publish "Questionnaire.Server.csproj" -c Release -o /app/publish --no-restore

# Final stage - runtime
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS final
WORKDIR /app
COPY --from=build /app/publish .

# Expose port
EXPOSE 8080

# Set environment variables
ENV ASPNETCORE_URLS=http://+:8080
ENV ASPNETCORE_ENVIRONMENT=Production

ENTRYPOINT ["dotnet", "Questionnaire.Server.dll"]
